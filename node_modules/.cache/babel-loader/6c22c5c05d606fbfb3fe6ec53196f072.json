{"ast":null,"code":"import React, { Component } from \"react\";\nimport queryString from 'query-string'; // import io from \"socket.io-client\";\n// import axios from 'axios';\n\nimport { userService } from './userService';\nimport ReactSnackBar from \"react-js-snackbar\";\nimport Speech from 'react-speech';\nimport SpeechRecognition from 'react-speech-recognition';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Show: false,\n      Showing: false\n    };\n\n    this.show = () => {\n      if (this.state.Showing) return;\n      this.setState({\n        Show: true,\n        Showing: true\n      });\n      setTimeout(() => {\n        this.setState({\n          Show: false,\n          Showing: false\n        });\n      }, 3000);\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      users: [],\n      email_error: '',\n      email_color: 'black',\n      pass_error: '',\n      pass_color: 'black',\n      redirect: false,\n      message: '',\n      pop: ''\n    }; // this.socket = io('localhost:3231');  \n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["E:/React/konza/src/Pages/Login.jsx"],"names":["React","Component","queryString","userService","ReactSnackBar","Speech","SpeechRecognition","Login","constructor","props","state","Show","Showing","show","setState","setTimeout","email","password","users","email_error","email_color","pass_error","pass_color","redirect","message","pop","componentDidMount","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,WAAP,MAAwB,cAAxB,C,CACA;AACA;;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;;;AAKA,eAAe,MAAMC,KAAN,SAAoBP,KAAK,CAACC,SAA1B,CAAoC;AAqBjDO,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SAnBlBC,KAmBkB,GAnBV;AACNC,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,OAAO,EAAE;AAFH,KAmBU;;AAAA,SAVlBC,IAUkB,GAVX,MAAM;AACX,UAAI,KAAKH,KAAL,CAAWE,OAAf,EAAwB;AAExB,WAAKE,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,OAAO,EAAE;AAAvB,OAAd;AACAG,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKD,QAAL,CAAc;AAAEH,UAAAA,IAAI,EAAE,KAAR;AAAeC,UAAAA,OAAO,EAAE;AAAxB,SAAd;AACD,OAFS,EAEP,IAFO,CAAV;AAGD,KAGiB;;AAGhB,SAAKF,KAAL,GAAa;AACLM,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,QAAQ,EAAC,EAFJ;AAGLC,MAAAA,KAAK,EAAE,EAHF;AAILC,MAAAA,WAAW,EAAC,EAJP;AAKLC,MAAAA,WAAW,EAAC,OALP;AAMLC,MAAAA,UAAU,EAAC,EANN;AAOLC,MAAAA,UAAU,EAAC,OAPN;AAQLC,MAAAA,QAAQ,EAAE,KARL;AASLC,MAAAA,OAAO,EAAC,EATH;AAULC,MAAAA,GAAG,EAAC;AAVC,KAAb,CAHgB,CAelB;AAGC;;AAEDC,EAAAA,iBAAiB,GAAG,CAEnB;;AAIDC,EAAAA,MAAM,GAAG;AAEP,wBACE,qCADF;AAKD;;AAtDgD","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport queryString from 'query-string';\r\n// import io from \"socket.io-client\";\r\n// import axios from 'axios';\r\nimport { userService } from './userService';\r\nimport ReactSnackBar from \"react-js-snackbar\";\r\nimport Speech from 'react-speech';\r\nimport SpeechRecognition from 'react-speech-recognition'\r\n\r\n\r\n\r\n\r\nexport default class Login extends React.Component {\r\n  \r\n  state = {\r\n    Show: false,\r\n    Showing: false\r\n  };\r\n\r\n  \r\n\t\r\n\r\n  \r\n  show = () => {\r\n    if (this.state.Showing) return;\r\n\r\n    this.setState({ Show: true, Showing: true });\r\n    setTimeout(() => {\r\n      this.setState({ Show: false, Showing: false });\r\n    }, 3000);\r\n  };\r\n\r\n  \r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {       \r\n            email: '',      \r\n            password:'',\r\n            users: [],\r\n            email_error:'', \r\n            email_color:'black', \r\n            pass_error:'',\r\n            pass_color:'black', \r\n            redirect: false,\r\n            message:'',\r\n            pop:'',    \r\n    };\r\n  // this.socket = io('localhost:3231');  \r\n   \r\n      \r\n  }\r\n  \r\n  componentDidMount() {\r\n    \r\n  }\r\n  \r\n  \r\n  \r\n  render() {\r\n   \r\n    return (\r\n      <>\r\n     \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}