{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\konza\\\\src\\\\layout\\\\Auth.jsx\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Auth extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getRoutes = routes => {\n      return routes.map((prop, key) => {\n        if (prop.layout != '/auth') {\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: prop.layout + prop.path,\n            component: prop.component\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }, this);\n        } else {\n          return null;\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    let listId = 1;\n    sessionStorage.setItem('webId', listId);\n    sessionStorage.setItem('id', listId);\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    var root = routes.map((prop, key) => {\n      if (prop.layout != '/auth') {\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: prop.layout + prop.path,\n          component: prop.component\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: this.getRoutes(routes)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["E:/React/konza/src/layout/Auth.jsx"],"names":["React","Route","Switch","Auth","Component","getRoutes","routes","map","prop","key","layout","path","component","componentDidMount","listId","sessionStorage","setItem","componentWillUnmount","render","root"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;;;AAEA,eAAe,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAUhDC,SAVgD,GAUpCC,MAAM,IAAI;AACpB,aAAOA,MAAM,CAACC,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC/B,YAAID,IAAI,CAACE,MAAL,IAAe,OAAnB,EAA6B;AAC3B,8BACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAEF,IAAI,CAACE,MAAL,GAAcF,IAAI,CAACG,IAD3B;AAEE,YAAA,SAAS,EAAEH,IAAI,CAACI;AAFlB,aAGOH,GAHP;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SARD,MAQO;AACL,iBAAO,IAAP;AACD;AACF,OAZM,CAAP;AAaD,KAxB+C;AAAA;;AAChDI,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,MAAM,GAAG,CAAb;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCF,MAAhC;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,IAAvB,EAA6BF,MAA7B;AAED;;AACDG,EAAAA,oBAAoB,GAAG,CAEtB;;AAgBDC,EAAAA,MAAM,GAAG;AACR,QAAIC,IAAI,GAAEb,MAAM,CAACC,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,KAAe;AACjC,UAAID,IAAI,CAACE,MAAL,IAAe,OAAnB,EAA6B;AAC3B,4BACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAEF,IAAI,CAACE,MAAL,GAAcF,IAAI,CAACG,IAD3B;AAEE,UAAA,SAAS,EAAEH,IAAI,CAACI;AAFlB,WAGOH,GAHP;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD;AACF,KAVQ,CAAV;AAaC,wBACE;AAAA,6BAIS,QAAC,MAAD;AAAA,kBAAS,KAAKJ,SAAL,CAAeC,MAAf;AAAT;AAAA;AAAA;AAAA;AAAA;AAJT,qBADF;AASD;;AAhD+C","sourcesContent":["import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nexport default class Auth extends React.Component {\r\n  componentDidMount() {\r\n    let listId = 1\r\n    sessionStorage.setItem('webId', listId)\r\n    sessionStorage.setItem('id', listId)\r\n    \r\n  }\r\n  componentWillUnmount() {\r\n    \r\n  }\r\n  getRoutes = routes => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout != '/auth' ) {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n   var root= routes.map((prop, key) => {\r\n      if (prop.layout != '/auth' ) {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            component={prop.component}\r\n            key={key}\r\n          />\r\n        );\r\n      } \r\n    });\r\n\r\n\r\n    return (\r\n      <>\r\n      \r\n            \r\n\r\n               <Switch>{this.getRoutes(routes)}</Switch>\r\n       \r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}